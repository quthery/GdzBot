from aiogram import F, Router
from aiogram.types import Message
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from ai.answer.models import InputData
from ai.answer.answer import Answerer

answer = Router()
ai = Answerer()
class Data(StatesGroup): 
	image = State()
	model = State()
	type = State()

@answer.message(F.text == "–†–µ—à–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ‚úçÔ∏è")
async def start_dialog(message: Message, state: FSMContext):
	await state.set_state(Data.image)
	await message.answer("–û—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–∏–µ–º –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—åüì∑")

@answer.message(Data.image)
async def set_image(message: Message, state: FSMContext):
	if not message.content_type == "photo":
		await message.answer("–û—Ç–ø—Ä–∞–≤—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µüò†")
		await state.set_state(Data.image)
		return
	await state.update_data(image=message.photo[-1].file_id)
	await state.set_state(Data.type)


@answer.message(Data.type)
async def set_type(message: Message, state: FSMContext):
	type_of_question = await ai.get_type(message.text)
	if type_of_question is None:
		await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏")
		await state.clear()
		return
	await message.answer("–í—ã–±–µ—Ä–∏ –º–æ–¥–µ–ª—å —á—Ç–æ–±—ã —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µü§ñ")
	await state.update_data(type=type_of_question)
	await state.set_state(Data.model)
	
#TODO: –î–æ–ø–∏—Å–∞—Ç—å —ç—Ç–æ –≤—Å–µ –¥–µ–ª–æ
@answer.message(Data.model)
async def set_model(message: Message, state: FSMContext):
	model = await ai.get_model(message.text)
	if model is None:
		await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏")
		await state.clear()
		return
	await state.update_data(model=model)

	
